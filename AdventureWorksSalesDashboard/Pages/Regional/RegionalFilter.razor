@using AdventureWorksSalesDashboard.Components.ItemPickerDialog
@inject IDbContextFactory<AdventureWorksContext> DbFactory
@inject RegionalFilterService RegionalFilterService
@inject IDialogService DialogService

<div class="regional-filter">
    <DateRangePicker FromDate="RegionalFilterService.RegionalFilterState.FromDate"
                     ToDate="RegionalFilterService.RegionalFilterState.ToDate"
                     MinDate="RegionalFilterService.RegionalFilterState.MinDate"
                     MaxDate="RegionalFilterService.RegionalFilterState.MaxDate"
                     OnFromDateChanged="(newFromDate) => HandleFromDateChanged(newFromDate)"
                     OnToDateChanged="(newToDate) => HandleToDateChanged(newToDate)" />
    <MudButton Variant="Variant.Filled"
               DisableElevation="true"
               Style="margin-top: 12px;"
               OnClick="OpenCountryPickerDialog">
        Country
    </MudButton>
    <MudButton Variant="Variant.Filled"
               DisableElevation="true"
               Style="margin-top: 12px;"
               OnClick="RegionalFilterService.Reset">
        Reset
    </MudButton>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await RegionalFilterService.Initialize();
            StateHasChanged();
        }
    }

    private async Task HandleFromDateChanged(DateTime? newFromDate)
    {
        RegionalFilterService.RegionalFilterState.FromDate = newFromDate;
        await RegionalFilterService.Update();
    }

    private async Task HandleToDateChanged(DateTime? newToDate)
    {
        RegionalFilterService.RegionalFilterState.ToDate = newToDate;
        await RegionalFilterService.Update();
    }

    private async Task OpenCountryPickerDialog()
    {
        var context = DbFactory.CreateDbContext();

        var parameters = new DialogParameters();

        var items = context.CountryRegions
            .Select(countryRegion => new CountryPickerTemplate
            {
                Key = countryRegion.CountryRegionCode,
                Name = countryRegion.Name,
                CountryRegionCode = countryRegion.CountryRegionCode
            })
            .AsQueryable();

        parameters.Add("Title", "Country");
        parameters.Add("Items", items);

        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            DisableBackdropClick = true
        };

        var dialog = DialogService.Show<ItemPickerDialog<CountryPickerTemplate>>(null, parameters, options);
        var result = await dialog.Result;
    }

    public class CountryPickerTemplate : IItemPickerTemplate
    {
        public required object Key { get; set; }

        public required string Name { get; set; }

        public required string CountryRegionCode { get; set; }
    }
}
