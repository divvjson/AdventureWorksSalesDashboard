@page "/"
@inject DrawerService DrawerService
@inject IDbContextFactory<AdventureWorksContext> DbFactory

<PageTitle>Home</PageTitle>

<div class="home">
    @if (DrawerService.IsOpen is false)
    {
        <MudIconButton Style="position: fixed; margin: 8px;"
                       Icon="@Icons.Material.Outlined.Menu"
                       Size="Size.Small"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       OnClick="OpenDrawer" />
    }
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
    <h1>Home</h1>
</div>

@code {
    // public string FirstProductName { get; set; } = string.Empty;

    // protected override async Task OnInitializedAsync()
    // {
    //     var context = DbFactory.CreateDbContext();

    //     var product = await context.Products.FirstOrDefaultAsync();

    //     if (product is not null)
    //     {
    //         FirstProductName = product.Name;
    //     }
    // }

    protected override void OnInitialized()
    {
        DrawerService.OnChange += HandleDrawerStateChange;
    }

    private void HandleDrawerStateChange()
    {
        InvokeAsync(StateHasChanged);
    }

    private void OpenDrawer()
    {
        DrawerService.Open();
    }

    public void Dispose()
    {
        DrawerService.OnChange -= HandleDrawerStateChange;
    }
}
