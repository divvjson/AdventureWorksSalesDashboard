@page "/"
@inject IDbContextFactory<AdventureWorksContext> DbFactory

<PageTitle>Home</PageTitle>

<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>
<h1>Main Content</h1>

@code {
    // public string FirstProductName { get; set; } = string.Empty;

    // protected override async Task OnInitializedAsync()
    // {
    //     var context = DbFactory.CreateDbContext();

    //     var product = await context.Products.FirstOrDefaultAsync();

    //     if (product is not null)
    //     {
    //         FirstProductName = product.Name;
    //     }
    // }
}
